{"version":3,"sources":["pieceTypes.ts","Icons/Knight.tsx","Icons/Bishop.tsx","Icons/Rok.tsx","Icons/Pawn.tsx","Icons/King.tsx","Icons/Queen.tsx","BOARD_START.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["getStraightMoves","board","piece","offset","moves","newCol","col","newRow","row","pieceInWay","isWhite","push","getHorizontalMoves","getVerticalMoves","getDiagonalMoves","pieceTypes","Knight","icon","viewBox","style","marginTop","width","fill","d","getPossMoves","forEach","rowOffset","colOffset","Math","abs","Bishop","Rok","Pawn","filter","p","King","move","Queen","BOARD_START","type","id","COL_NAMES","Tile","rowIdx","colIdx","onClick","Icon","height","background","position","opacity","fontSize","bottom","textAlign","padding","App","React","useState","possMoves","setPossMoves","setBoard","selectedPiece","setSelectedPiece","isWhiteTurn","setIsWhiteTurn","className","color","display","gridTemplateColumns","maxWidth","margin","map","isPoss","find","key","border","boxSizing","myPiece","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.978b0f1c.chunk.js","sourcesContent":["import Rok from \"./Icons/Rok\";\nimport Knight from \"./Icons/Knight\";\nimport Pawn from \"./Icons/Pawn\";\nimport Queen from \"./Icons/Queen\";\nimport King from \"./Icons/King\";\nimport Bishop from \"./Icons/Bishop\";\n\n/** gets moves in a straight line one direction\n * ex: getStraightMoves({ board, piece, offset: { row: 0, col: 1 }}) # gets horizontal moves left\n */\nfunction getStraightMoves({\n  board,\n  piece,\n  offset,\n}: {\n  board: any;\n  piece: { col: number; row: number; isWhite: boolean };\n  offset: { col: number; row: number };\n}) {\n  const moves = [];\n  let newCol = piece.col;\n  let newRow = piece.row;\n  while (newCol <= 7 && newCol >= 0 && newRow <= 7 && newRow >= 0) {\n    newCol += offset.col;\n    newRow += offset.row;\n    const pieceInWay = board[newRow]?.[newCol];\n    if (pieceInWay) {\n      if (pieceInWay.isWhite !== piece.isWhite) {\n        moves.push({ row: newRow, col: newCol });\n      }\n      break;\n    }\n    moves.push({ row: newRow, col: newCol });\n  }\n  return moves;\n}\n\nfunction getHorizontalMoves({ board, piece }) {\n  return [\n    ...getStraightMoves({\n      board,\n      piece,\n      offset: { row: 0, col: 1 },\n    }),\n    ...getStraightMoves({\n      board,\n      piece,\n      offset: { row: 0, col: -1 },\n    }),\n  ];\n}\n\nfunction getVerticalMoves({ board, piece }) {\n  return [\n    ...getStraightMoves({\n      board,\n      piece,\n      offset: { row: 1, col: 0 },\n    }),\n    ...getStraightMoves({\n      board,\n      piece,\n      offset: { row: -1, col: 0 },\n    }),\n  ];\n}\n\nfunction getDiagonalMoves({ board, piece }) {\n  return [\n    ...getStraightMoves({\n      board,\n      piece,\n      offset: { row: 1, col: 1 },\n    }),\n    ...getStraightMoves({\n      board,\n      piece,\n      offset: { row: -1, col: -1 },\n    }),\n    ...getStraightMoves({\n      board,\n      piece,\n      offset: { row: -1, col: 1 },\n    }),\n    ...getStraightMoves({\n      board,\n      piece,\n      offset: { row: 1, col: -1 },\n    }),\n  ];\n}\n\nconst pieceTypes = {\n  Knight: {\n    icon: Knight,\n    getPossMoves: ({ row, col, isWhite, board }) => {\n      const moves = [];\n      [-2, 2, -1, 1].forEach((rowOffset) => {\n        [-1, 1, -2, 2].forEach((colOffset) => {\n          const newRow = row + rowOffset;\n          const newCol = col + colOffset;\n          if (Math.abs(rowOffset) === Math.abs(colOffset)) {\n          } else if (newRow === row && newCol === col) {\n            // can't stay in place\n          } else {\n            const pieceInWay = board[newRow]?.[newCol];\n            if (pieceInWay?.isWhite !== isWhite) {\n              moves.push({ row: newRow, col: newCol });\n            }\n          }\n        });\n      });\n      // this still returns moves off board but that's not been an issue yet\n      return moves;\n    },\n  },\n  Bishop: {\n    icon: Bishop,\n    getPossMoves: ({ row, col, board, isWhite }) => {\n      const piece = { isWhite, row, col };\n      return getDiagonalMoves({ board, piece });\n    },\n  },\n  Rok: {\n    icon: Rok,\n    getPossMoves: ({ row, col, board, isWhite }) => {\n      const piece = { isWhite, row, col };\n      return [\n        ...getHorizontalMoves({ board, piece }),\n        ...getVerticalMoves({ board, piece }),\n      ];\n    },\n  },\n  Pawn: {\n    icon: Pawn,\n    getPossMoves: ({ row, col, isWhite, board }) => {\n      const offset = isWhite ? -1 : 1;\n      let moves = [{ row: row + offset, col }];\n\n      // double first move\n      if ((isWhite && row === 6) || (!isWhite && row === 1)) {\n        // only when no one in front\n        if (!board[row + offset][col]) {\n          moves.push({ row: row + offset * 2, col });\n        }\n      }\n      moves = moves.filter((p) => {\n        if (board[p.row]?.[p.col]) {\n          // can't hit others\n          return false;\n        } else {\n          return true;\n        }\n      });\n      // Attacks\n      let pieceInWay = board[row + offset]?.[col + offset];\n      if (pieceInWay && pieceInWay.isWhite !== isWhite) {\n        moves.push({ row: row + offset, col: col + offset });\n      }\n      pieceInWay = board[row + offset][col - offset];\n      if (pieceInWay && pieceInWay.isWhite !== isWhite) {\n        moves.push({ row: row + offset, col: col - offset });\n      }\n      return moves;\n    },\n  },\n  King: {\n    icon: King,\n    getPossMoves: ({ row, col, isWhite, board }) => {\n      const piece = { row, col, isWhite };\n      const moves = [];\n      [-1, 0, 1].forEach((rowOffset) => {\n        [-1, 0, 1].forEach((colOffset) => {\n          const move = getStraightMoves({\n            board,\n            piece,\n            offset: { row: rowOffset, col: colOffset },\n          })[0];\n          if (move) {\n            moves.push(move);\n          }\n        });\n      });\n      return moves;\n    },\n  },\n  Queen: {\n    icon: Queen,\n    getPossMoves: ({ row, col, board, isWhite }) => {\n      const piece = { isWhite, row, col };\n      return [\n        ...getHorizontalMoves({ board, piece }),\n        ...getVerticalMoves({ board, piece }),\n        ...getDiagonalMoves({ board, piece }),\n      ];\n    },\n  },\n};\n\nexport { pieceTypes };\n","import React from \"react\";\r\n\r\nexport default function Knight({ isWhite }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 297 297\"\r\n      style={{\r\n        marginTop: \"10%\",\r\n        width: \"65%\",\r\n        fill: isWhite ? \"white\" : \"black\",\r\n      }}\r\n    >\r\n      <path\r\n        d=\"M210.952,116c14.912,0,27.037-12.088,27.037-27s-10.945-25.013-26.964-30.666c-11.333-4-18.018-10.823-23.009-19.412\r\n\t\tC183.025,30.333,172.025,17,157.525,17c-5.832,0-19.798,0-19.798,0V0c-107,40.03-72.369,184-72.369,184h21.369v14h-6.369\r\n\t\tc-4.418,0-8.631,3.582-8.631,8v1c0,3.289,2.302,6.111,5.14,7.341c-8.77,15.05-1.419,29.775,0.761,33.659h-5.271\r\n\t\tc-4.418,0-8.631,3.582-8.631,8v18c0,4.418,4,8,8,8v16h132v-16.069c4-0.493,7-3.853,7-7.931v-18c0-4.418-2.951-8-7.369-8h-4.27\r\n\t\tc2.181-3.884,8.902-18.609,0.13-33.659c2.838-1.23,4.508-4.052,4.508-7.341v-1c0-4.418-2.951-8-7.369-8h-7.631v-14h24.132\r\n\t\tc-16.501-54-66.334-83-66.334-83h40.182C191.146,109.889,200.351,116,210.952,116z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Piece({ isWhite }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 297 297\"\r\n      style={{\r\n        marginTop: \"5%\",\r\n        width: \"70%\",\r\n        fill: isWhite ? \"white\" : \"black\",\r\n      }}\r\n    >\r\n      <path\r\n        d=\"M206.873,255.08h-3.41c2.214-3.337,8.32-14.536-0.712-25.6c-8.9-10.905-25.137-39.546-24.448-64.4h3.57\r\n\t\tc4.418,0,7.667-3.582,7.667-8v-1c0-4.418-3.249-8-7.667-8h-4.333v-4.285c13-8.971,20.511-23.502,20.511-39.914\r\n\t\tc0-10.332-7.011-26.11-15.819-41.721l-18.553,18.595c-3.111,3.111-8.182,3.111-11.294,0.001l-0.921-0.933\r\n\t\tc-3.111-3.11-3.106-8.202,0.005-11.313l21.676-21.674c-4.444-7.069-8.869-13.678-12.703-19.224\r\n\t\tc2.881-2.93,4.663-6.944,4.663-11.379C165.106,7.268,157.841,0,148.874,0c-8.967,0-16.234,7.268-16.234,16.233\r\n\t\tc0,4.434,1.781,8.448,4.662,11.379c-14.585,21.101-37.94,57.587-37.94,76.269c0,16.853,8.178,31.724,21.178,40.625v3.574h-4.667\r\n\t\tc-4.418,0-8.333,3.582-8.333,8v1c0,4.418,3.915,8,8.333,8h3.571c0.689,24.855-15.547,53.495-24.448,64.4\r\n\t\tc-9.031,11.064-2.926,22.263-0.712,25.6h-3.411c-4.418,0-8.333,3.582-8.333,8v9c0,4.078,3,7.438,7,7.931v17.069h118v-17.069\r\n\t\tc4-0.493,7-3.853,7-7.931v-9C214.54,258.662,211.291,255.08,206.873,255.08z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Piece({ isWhite }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 297 297\"\r\n      style={{\r\n        marginTop: \"10%\",\r\n        width: \"65%\",\r\n        fill: isWhite ? \"white\" : \"black\",\r\n      }}\r\n    >\r\n      <path\r\n        d=\"M216.923,246.538c3.457-6.556,9.963-22.777-1.666-39.137C200.508,186.65,179.942,125,193.61,83H207V0h-16v17h-16V0h-18v17\r\n\t\th-16V0h-17v17h-16V0H91v83h14.057c13.668,42-6.98,103.65-21.73,124.401c-11.629,16.359-5.373,32.706-1.916,39.262\r\n\t\tC77.347,247.044,74,250.337,74,254.5v18c0,4.418,3.915,8.5,8.333,8.5H83v17h132v-17h1.333c4.418,0,7.667-4.082,7.667-8.5v-18\r\n\t\tC224,250.338,220.986,246.92,216.923,246.538z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Piece({ isWhite }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 297 297\"\r\n      style={{\r\n        width: \"50%\",\r\n        marginTop: \"30%\",\r\n        fill: isWhite ? \"white\" : \"black\",\r\n      }}\r\n    >\r\n      <path\r\n        d=\"M223.333,247h-5.926c2.607-3.811,10.798-18.024-0.727-32.248c-13.334-16.46-39.863-65.748-27.324-98.752h0.977\r\n\t\tc4.418,0,7.667-3.582,7.667-8v-1c0-4.418-3.249-8-7.667-8h-1.225c10.917-10.466,17.725-25.184,17.725-41.5\r\n\t\tc0-31.756-25.744-57.5-57.5-57.5s-57.5,25.744-57.5,57.5c0,16.316,6.808,31.034,17.725,41.5h-2.225c-4.418,0-8.333,3.582-8.333,8v1\r\n\t\tc0,4.418,3.915,8,8.333,8h1.979c12.539,33.004-13.99,82.292-27.324,98.752c-11.524,14.224-3.334,28.437-0.727,32.248h-6.928\r\n\t\tc-4.418,0-8.333,3.582-8.333,8v18c0,4.418,3.915,8,8.333,8H75v16h148v-16c5,0,8-3.582,8-8v-18C231,250.582,227.751,247,223.333,247\r\n\t\tz\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Piece({ isWhite }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 297 297\"\r\n      style={{ fill: isWhite ? \"white\" : \"black\", width: \"80%\" }}\r\n    >\r\n      <path\r\n        d=\"M197.333,256h-1.641c1.878-3.337,7.061-14.536-0.605-25.6c-7.554-10.905-21.491-39.547-20.904-64.401\r\n\t\tc4.409-0.01,7.816-3.587,7.816-7.999v-1c0-4.418-3.582-8-8-8c4.418,0,8-3.582,8-8v-1c0-4.418-3.249-8-7.667-8h-3.55\r\n\t\tc-1.006-16.142,1.307-29.861,4.798-40.724c1.121-3.487,2.432-6.186,3.752-8.276h2c4.418,0,7.667-3.582,7.667-8v-1\r\n\t\tc0-4.343-3.463-7.87-7.777-7.988C179.087,52.771,169,42.203,156,39.363V27h12V12h-12V0h-15v12h-12v15h12v12.595\r\n\t\tc-12,3.15-21.803,13.512-23.888,26.405h-0.779c-4.418,0-8.333,3.582-8.333,8v1c0,4.418,3.915,8,8.333,8h3\r\n\t\tc1.32,2.091,2.631,4.789,3.752,8.276c3.491,10.862,5.804,24.582,4.798,40.724h-4.55c-4.418,0-8.333,3.582-8.333,8v1\r\n\t\tc0,4.418,3.582,8,8,8c-4.418,0-8,3.582-8,8v1c0,4.418,3.915,8,8.333,8h1.053c0.588,24.855-13.183,53.495-20.737,64.4\r\n\t\tc-7.664,11.063-2.482,22.263-0.604,25.6h-1.711c-4.418,0-8.333,3.582-8.333,8v9c0,3.727,3,6.849,6,7.737V298h100v-17.263\r\n\t\tc4-0.889,6-4.011,6-7.737v-9C205,259.582,201.751,256,197.333,256z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Piece({ isWhite }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 297 297\"\r\n      style={{\r\n        fill: isWhite ? \"white\" : \"black\",\r\n        width: \"80%\",\r\n      }}\r\n    >\r\n      <path\r\n        d=\"M207.218,255.77h-3.369c2.214-3.337,8.32-14.536-0.712-25.6c-8.9-10.905-25.129-39.546-24.438-64.4h3.519\r\n\t\tc4.418,0,7.667-3.582,7.667-8v-1c0-4.418-3.582-8-8-8c4.418,0,8-3.582,8-8v-1c0-4.418-3.249-8-7.667-8h-4.626\r\n\t\tc-2.064-21.741,1.078-43.054,5.959-54.666c1.86-4.425,4.118-7.79,6.296-10.334h1.371c4.418,0,7.667-3.582,7.667-8v-1\r\n\t\tc0-4.418-3.249-8-7.667-8h-9.8c-1.803-10.896-8.998-19.966-18.755-24.383c1.783-2.607,2.829-5.757,2.829-9.154\r\n\t\tC165.492,7.267,158.227,0,149.26,0s-16.234,7.267-16.234,16.232c0,3.385,1.037,6.525,2.809,9.127\r\n\t\tc-9.788,4.406-17.01,13.49-18.816,24.41h-10.8c-4.418,0-8.333,3.582-8.333,8v1c0,4.418,3.915,8,8.333,8h2.371\r\n\t\tc2.178,2.544,4.436,5.909,6.296,10.334c4.881,11.612,8.023,32.925,5.959,54.666h-4.626c-4.418,0-8.333,3.582-8.333,8v1\r\n\t\tc0,4.418,3.582,8,8,8c-4.418,0-8,3.582-8,8v1c0,4.418,3.915,8,8.333,8h3.602c0.692,24.854-15.536,53.495-24.438,64.4\r\n\t\tc-9.031,11.063-2.926,22.263-0.712,25.6h-3.452c-4.418,0-8.333,3.582-8.333,8v9c0,4.078,3,7.438,7,7.931v17.069h118V280.7\r\n\t\tc4-0.493,7-3.853,7-7.931v-9C214.885,259.352,211.636,255.77,207.218,255.77z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","const BOARD_START = [\n  [\n    { type: \"Rok\", id: \"r_b_0\", isWhite: false },\n    { type: \"Knight\", id: \"kt_b_0\", isWhite: false },\n    { type: \"Bishop\", id: \"b_b_0\", isWhite: false },\n    { type: \"King\", id: \"kg_b_0\", isWhite: false },\n    { type: \"Queen\", id: \"q_b_0\", isWhite: false },\n    { type: \"Bishop\", id: \"b_b_0\", isWhite: false },\n    { type: \"Knight\", id: \"kt_b_1\", isWhite: false },\n    { type: \"Rok\", id: \"r_b_1\", isWhite: false },\n  ],\n  [\n    { type: \"Pawn\", id: \"p_b_0\", isWhite: false },\n    { type: \"Pawn\", id: \"p_b_1\", isWhite: false },\n    { type: \"Pawn\", id: \"p_b_2\", isWhite: false },\n    { type: \"Pawn\", id: \"p_b_3\", isWhite: false },\n    { type: \"Pawn\", id: \"p_b_4\", isWhite: false },\n    { type: \"Pawn\", id: \"p_b_5\", isWhite: false },\n    { type: \"Pawn\", id: \"p_b_6\", isWhite: false },\n    { type: \"Pawn\", id: \"p_b_7\", isWhite: false },\n  ],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [\n    { type: \"Pawn\", id: \"p_w_0\", isWhite: true },\n    { type: \"Pawn\", id: \"p_w_1\", isWhite: true },\n    { type: \"Pawn\", id: \"p_w_2\", isWhite: true },\n    { type: \"Pawn\", id: \"p_w_3\", isWhite: true },\n    { type: \"Pawn\", id: \"p_w_4\", isWhite: true },\n    { type: \"Pawn\", id: \"p_w_5\", isWhite: true },\n    { type: \"Pawn\", id: \"p_w_6\", isWhite: true },\n    { type: \"Pawn\", id: \"p_w_7\", isWhite: true },\n  ],\n  [\n    { type: \"Rok\", id: \"r_w_0\", isWhite: true },\n    { type: \"Knight\", id: \"kt_w_0\", isWhite: true },\n    { type: \"Bishop\", id: \"b_w_0\", isWhite: true },\n    { type: \"Queen\", id: \"q_w_0\", isWhite: true },\n    { type: \"King\", id: \"kg_w_0\", isWhite: true },\n    { type: \"Bishop\", id: \"b_w_1\", isWhite: true },\n    { type: \"Knight\", id: \"kt_w_1\", isWhite: true },\n    { type: \"Rok\", id: \"r_w_1\", isWhite: true },\n  ],\n];\n\nexport { BOARD_START };\n","import React from \"react\";\nimport \"./App.css\";\nimport { pieceTypes } from \"./pieceTypes\";\nimport { BOARD_START } from \"./BOARD_START\";\n\nconst COL_NAMES = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n\nfunction Tile({ rowIdx, colIdx, piece, onClick, style }) {\n  const Icon = pieceTypes[piece?.type]?.icon;\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        height: \"min(calc(100vw / 8), calc(80vh / 8))\",\n        background: (rowIdx + colIdx) % 2 === 0 ? \"#ccc\" : \"#aaa\",\n        position: \"relative\",\n        ...style,\n      }}\n    >\n      <div\n        style={{\n          opacity: 0.2,\n          fontSize: 12,\n          position: \"absolute\",\n          bottom: 0,\n          width: \"100%\",\n          textAlign: \"center\",\n        }}\n      >\n        {COL_NAMES[colIdx]}\n        {8 - rowIdx}\n      </div>\n      <div style={{ padding: 10 }}>\n        {piece ? <Icon isWhite={piece.isWhite} /> : piece}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  const [possMoves, setPossMoves] = React.useState([]);\n  const [board, setBoard] = React.useState(BOARD_START);\n  const [selectedPiece, setSelectedPiece] = React.useState<{\n    piece: {};\n    row: number;\n    col: number;\n  }>();\n  const [isWhiteTurn, setIsWhiteTurn] = React.useState(true);\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          fontSize: \"2em\",\n          padding: \"1em\",\n          background: isWhiteTurn ? \"white\" : \"black\",\n          color: isWhiteTurn ? \"black\" : \"white\",\n        }}\n      >\n        {isWhiteTurn ? \"White's Turn\" : \"Black's Turn\"}\n      </div>\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(8, 1fr)\",\n          maxWidth: \"80vh\",\n          margin: \"auto\",\n        }}\n      >\n        {board.map((row, rowIdx) =>\n          row.map((piece, colIdx) => {\n            const isPoss = !!possMoves.find(\n              ({ row, col }) => row === rowIdx && col === colIdx\n            );\n            return (\n              <Tile\n                key={rowIdx + colIdx}\n                style={\n                  isPoss\n                    ? {\n                        background: \"cyan\",\n                        border: \"#00bdbd solid\",\n                        boxSizing: \"border-box\",\n                      }\n                    : {}\n                }\n                onClick={() => {\n                  if (isPoss) {\n                    const myPiece = board[selectedPiece.row][selectedPiece.col];\n                    board[selectedPiece.row][selectedPiece.col] = null;\n                    board[rowIdx][colIdx] = myPiece;\n                    setBoard([...board]);\n                    setSelectedPiece(null);\n                    setPossMoves([]);\n                    setIsWhiteTurn(() => !isWhiteTurn);\n                  } else if (piece) {\n                    if (isWhiteTurn === piece.isWhite) {\n                      setSelectedPiece({ piece, row: rowIdx, col: colIdx });\n                      setPossMoves(\n                        pieceTypes[piece?.type].getPossMoves({\n                          row: rowIdx,\n                          col: colIdx,\n                          isWhite: piece?.isWhite,\n                          board,\n                        })\n                      );\n                    } else {\n                      setPossMoves([]);\n                    }\n                  } else {\n                    setPossMoves([]);\n                  }\n                }}\n                {...{ rowIdx, colIdx, piece }}\n              />\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}